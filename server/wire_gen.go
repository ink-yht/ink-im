// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gin-gonic/gin"
	"ink-im-server/internal/repository/cache/files_cache"
	"ink-im-server/internal/repository/cache/user_cache"
	"ink-im-server/internal/repository/dao/files_dao"
	"ink-im-server/internal/repository/dao/user_dao"
	"ink-im-server/internal/repository/files_repo"
	"ink-im-server/internal/repository/user_repo"
	"ink-im-server/internal/service/files_service"
	"ink-im-server/internal/service/user_service"
	"ink-im-server/internal/web/files_web"
	"ink-im-server/internal/web/user_web"
	"ink-im-server/ioc"
)

import (
	_ "github.com/spf13/viper/remote"
)

// Injectors from wire.go:

func InitWebServer() *gin.Engine {
	logger := ioc.InitLogger()
	v := ioc.InitMiddleWares(logger)
	db := ioc.InitDB(logger)
	userDao := user_dao.NewUserDAO(db)
	cmdable := ioc.InitRedis()
	userCache := user_cache.NewUserCache(cmdable)
	userRepository := user_repo.NewUserRepository(userDao, userCache)
	userService := user_service.NewUserService(userRepository, logger)
	userHandler := user_web.NewUserHandler(userService, logger)
	friendDao := user_dao.NewFriendDAO(db)
	friendCache := user_cache.NewFriendCache(cmdable)
	friendRepository := user_repo.NewFriendRepository(friendDao, friendCache)
	friendService := user_service.NewFriendService(friendRepository, logger)
	friendHandler := user_web.NewFriendHandler(friendService, logger)
	avatarDao := files_dao.NewAvatarDAO(db)
	avatarCache := files_cache.NewAvatarCache(cmdable)
	avatarRepository := files_repo.NewAvatarRepository(avatarDao, avatarCache)
	avatarService := files_service.NewAvatarService(avatarRepository, logger)
	avatarHandler := files_web.NewAvatarHandler(avatarService, logger)
	engine := ioc.InitWebServer(v, userHandler, friendHandler, avatarHandler)
	return engine
}
